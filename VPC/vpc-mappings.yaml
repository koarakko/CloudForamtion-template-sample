Description: Create VPC template

Mappings:
  VPC:
    VPCConfigure:
      Name: Base-VPC
      Range: 10.1.0.0/16
#### Public Subnet
    Subnet1:
      Subnet: 10.1.0.0/24
      Value: Subnet1
    Subnet2:
      Subnet: 10.1.1.0/24
      Value: Subnet2
    Subnet3:
      Subnet: 10.1.2.0/24
      Value: Subnet3
#### Private Subnet
    Subnet100:
      Subnet: 10.1.100.0/24
      Value: Subnet100


Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap [ VPC, VPCConfigure, Range ]
      Tags:
        - Key: Name
          Value: !FindInMap [ VPC, VPCConfigure, Name ]

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !FindInMap [ VPC, VPCConfigure, Name ]

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs ]
      MapPublicIpOnLaunch: true
      CidrBlock: !FindInMap [ VPC, Subnet1, Subnet ]
      Tags:
        - Key: Name
          Value: !FindInMap [ VPC, Subnet1, Value ]


  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs ]
      MapPublicIpOnLaunch: true
      CidrBlock: !FindInMap [ VPC, Subnet2, Subnet ]
      Tags:
        - Key: Name
          Value: !FindInMap [ VPC, Subnet2, Value ]

  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs ]
      MapPublicIpOnLaunch: true
      CidrBlock: !FindInMap [ VPC, Subnet3, Subnet ]
      Tags:
        - Key: Name
          Value: !FindInMap [ VPC, Subnet3, Value ]

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !FindInMap [ VPC, VPCConigure, Name ]

  DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet2

  PublicSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet3


Outputs:
  PublicSubnet1:
    Value: !Ref PublicSubnet1
    Export:
      Name: PublicSubnet1

  PublicSubnet2:
    Value: !Ref PublicSubnet2
    Export:
      Name: PublicSubnet2

  PublicSubnet3:
    Value: !Ref PublicSubnet3
    Export:
      Name: PublicSubnet3

  VpcId:
    Value: !Ref VPC
    Export:
      Name: VpcId
